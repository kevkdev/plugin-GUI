name: Windows

on:
  push:
    paths:
    - '.github/workflows/**'
    - 'JuceLibraryCode/**'
    - 'PluginGenerator/**'
    - 'Plugins/**'
    - 'Resources/**'
    - 'Source/**'
    - 'CMakeLists.txt'
    - 'HelperFunctions.cmake'

jobs:
  build-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: |
        cd Build 
        cmake -G "Visual Studio 16 2019" -A x64 ..
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - name: build
      run: |
        msbuild Build/ALL_BUILD.vcxproj -p:Configuration=Release -p:Platform=x64
#   - name: test
#     run: cd build && ctest
    - name: deploy_dev
      if: github.ref == 'refs/heads/development'
      env:
        ARTIFACTORY_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
      run: |
        cd Build
        cp -r Release open-ephys
        cp -r ../Resources/DLLs/FrontPanelUSB-DriverOnly-4.5.5.exe open-ephys
        cp -r ../Resources/DLLs/FTD3XXDriver_WHQLCertified_1.3.0.8_Installer.exe open-ephys
        cp ../LICENSE open-ephys
        gui_ver=$(git describe --tags $(git rev-list --tags --max-count=1))
        zipfile=open-ephys-latest-windows-dev.zip
        powershell Compress-Archive -Path "open-ephys" -DestinationPath ${zipfile}
        user_info="X-JFrog-Art-Api:$ARTIFACTORY_ACCESS_TOKEN"
        curl -H $user_info -T $zipfile "https://openephys.jfrog.io/artifactory/GUI-binaries/Dev/windows/$zipfile"
        cd ../Resources/Installers/Windows
        iscc "windows_installer_script.iss"
        installer=Install-Open-Ephys-GUI-latest-dev.exe
        mv Open-Ephys_Installer.exe $installer
        curl -H $user_info -T $installer "https://openephys.jfrog.io/artifactory/GUI-binaries/Dev-Installer/windows/$installer"
      shell: bash
    - name: deploy_test
      if: github.ref == 'refs/heads/testing'
      env:
        ARTIFACTORY_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
      run: |
        cd Build
        cp -r Release open-ephys
        cp -r ../Resources/DLLs/FrontPanelUSB-DriverOnly-4.5.5.exe open-ephys
        cp -r ../Resources/DLLs/FTD3XXDriver_WHQLCertified_1.3.0.8_Installer.exe open-ephys
        cp ../LICENSE open-ephys
        gui_ver=$(git describe --tags $(git rev-list --tags --max-count=1))
        zipfile=open-ephys-${gui_ver}-windows-beta.zip
        powershell Compress-Archive -Path "open-ephys" -DestinationPath ${zipfile}
        user_info="X-JFrog-Art-Api:$ARTIFACTORY_ACCESS_TOKEN"
        curl -H $user_info -T $zipfile "https://openephys.jfrog.io/artifactory/GUI-binaries/Test/windows/$zipfile"
        cd ../Resources/Installers/Windows
        iscc "windows_installer_script.iss"
        installer=Install-Open-Ephys-GUI-${gui_ver}-beta.exe
        mv Open-Ephys_Installer.exe $installer
        curl -H $user_info -T $installer "https://openephys.jfrog.io/artifactory/GUI-binaries/Test-Installer/windows/$installer"
      shell: bash
    - name: deploy_release
      if: github.ref == 'refs/heads/main'
      env:
        ARTIFACTORY_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
      run: |
        cd Build
        cp -r Release open-ephys
        cp -r ../Resources/DLLs/FrontPanelUSB-DriverOnly-4.5.5.exe open-ephys
        cp -r ../Resources/DLLs/FTD3XXDriver_WHQLCertified_1.3.0.8_Installer.exe open-ephys
        cp ../LICENSE open-ephys
        gui_ver=$(git describe --tags $(git rev-list --tags --max-count=1))
        zipfile=open-ephys-${gui_ver}-windows.zip
        powershell Compress-Archive -Path "open-ephys" -DestinationPath ${zipfile}
        user_info="X-JFrog-Art-Api:$ARTIFACTORY_ACCESS_TOKEN"
        curl -H $user_info -T $zipfile "https://openephys.jfrog.io/artifactory/GUI-binaries/Release/windows/$zipfile"
        cd ../Resources/Installers/Windows
        iscc "windows_installer_script.iss"
        installer=Install-Open-Ephys-GUI-${gui_ver}.exe
        mv Open-Ephys_Installer.exe $installer
        curl -H $user_info -T $installer "https://openephys.jfrog.io/artifactory/GUI-binaries/Release-Installer/windows/$installer"
      shell: bash
